/*******************************************************************************
 * Copyright (C) 2016 Mango Business Solutions Ltd, http://www.mango-solutions.com
 *
 * This program is free software: you can redistribute it and/or modify it under
 * the terms of the GNU Affero General Public License as published by the
 * Free Software Foundation, version 3.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
 * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License
 * for more details.
 *
 * You should have received a copy of the GNU Affero General Public License along
 * with this program. If not, see <http://www.gnu.org/licenses/agpl-3.0.html>.
 *******************************************************************************/
package com.mango.mif.connector.runner.status;

/**
 * 
 * A default implementation of a Detailed Status builder which uses a command builder to generate a command that collects information 
 * which is then used to populate status object.
 */
import org.apache.commons.lang.StringUtils;

import com.mango.mif.core.domain.Job;
import com.mango.mif.core.exec.ExecutionException;
import com.mango.mif.core.exec.Invoker;
import com.mango.mif.core.exec.InvokerResult;
import com.mango.mif.core.exec.invoker.InvokerHelper;
import com.mango.mif.core.exec.template.JobAwareFreemarkerTemplateCommandBuilder;
import com.mango.mif.domain.DetailedStatus;

public class DetailedStatusBuilderWithCommandBuilder implements JobDetailedStatusBuilder  {

    private JobAwareFreemarkerTemplateCommandBuilder summaryCommandBuilder;
    private Job job;

    public DetailedStatusBuilderWithCommandBuilder() {
        super();
    }

    @Override
    public void setJob(Job job) throws ExecutionException {
        this.job = job;
        summaryCommandBuilder.setJob(job);
    }

    public JobAwareFreemarkerTemplateCommandBuilder getSummaryCommandBuilder() {
        return summaryCommandBuilder;
    }

    public void setSummaryCommandBuilder(JobAwareFreemarkerTemplateCommandBuilder summaryCommandBuilder) {
        this.summaryCommandBuilder = summaryCommandBuilder;
    }

    public Job getJob() {
        return job;
    }
    
    public Invoker getInvoker() {
        return job.getInvoker();
    }

    /**
     * Executes a command generated by summary message command builder and populates the detailed status with the returned text
     * @param detailedStatus a status object
     * @throws ExecutionException if execution of the summary message command fails.
     */
    protected void populateWithSummaryMessage(DetailedStatus detailedStatus) throws ExecutionException {
        
        InvokerHelper helper = new InvokerHelper(getInvoker());
        String command = getSummaryCommandBuilder().getCommand();
        InvokerResult invokerResult = helper.run(command);
        
        if (invokerResult.getExitStatus()!=0) {
            throw new ExecutionException("Could not retrieve summary. \n Error Stream:\n" 
                    + invokerResult.getErrorStream() 
                    + "\n Output Stream:\n" 
                    + invokerResult.getOutputStream());
        }
        String summary = StringUtils.chomp(invokerResult.getOutputStream());
        detailedStatus.setSummary(summary);
    }

    @Override
    public DetailedStatus getDetailedStatus() throws ExecutionException {
        DetailedStatus detailedStatus = new DetailedStatus();
        detailedStatus.setRequestId(job.getJobId());
        populateWithSummaryMessage(detailedStatus);
        return detailedStatus;
    }
}