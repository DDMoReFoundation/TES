<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<artifactId>MIFServer</artifactId>
	<packaging>war</packaging>
	<name>MIFServer</name>
	<url>http://www.mango-solutions.com</url>

	<parent>
		<artifactId>MangoInteroperabilityFramework</artifactId>
		<groupId>com.mango</groupId>
		<version>3.0.19-ddmore</version>
	</parent>

	<reporting>
		<outputDirectory>${project.build.directory}/site</outputDirectory>
	</reporting>
    
	<properties>
		<jetty.version>6.1.26</jetty.version>
		<web-inf.path>${basedir}/src/main/webapp/WEB-INF</web-inf.path>
		<project.build.runtime>${basedir}/target/runtime</project.build.runtime>
		<!-- default build properties location can be overridden by profiles -->
		<mif.build.properties.file.location>${basedir}/../build-env.properties</mif.build.properties.file.location>
	</properties>

	<dependencies>
		<dependency>
			<groupId>com.mango</groupId>
			<artifactId>MIFClient</artifactId>
			<version>${project.version}</version>
		</dependency>

        <dependency>
            <groupId>com.mango</groupId>
            <artifactId>MIFClient</artifactId>
            <version>${project.parent.version}</version>
            <classifier>binary</classifier>
            <type>zip</type>
        </dependency>

		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>2.4</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>com.google.code.findbugs</groupId>
			<artifactId>jsr305</artifactId>
			<version>1.3.7</version>
		</dependency>
		<dependency>
			<groupId>net.bull.javamelody</groupId>
			<artifactId>javamelody-core</artifactId>
			<version>1.41.0</version>
		</dependency>
		<dependency>
			<groupId>org.jrobin</groupId>
			<artifactId>jrobin</artifactId>
			<version>1.5.9.1</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${spring-version}</version>
			<exclusions>
				<exclusion>
					<artifactId>commons-logging</artifactId>
					<groupId>commons-logging</groupId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
			<version>${spring-version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-beans</artifactId>
			<version>${spring-version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-oxm</artifactId>
			<version>${spring-version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aop</artifactId>
			<version>${spring-version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${spring-version}</version>
		</dependency>

		<dependency>
			<groupId>cglib</groupId>
			<artifactId>cglib-nodep</artifactId>
			<version>2.2.2</version>
		</dependency>

		<!-- SCXML start -->
		<dependency>
			<groupId>commons-scxml</groupId>
			<artifactId>commons-scxml</artifactId>
			<version>0.9</version>
			<exclusions>
				<exclusion>
					<artifactId>commons-logging</artifactId>
					<groupId>commons-logging</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>commons-jexl</groupId>
			<artifactId>commons-jexl</artifactId>
			<version>1.1</version>
			<exclusions>
				<exclusion>
					<artifactId>commons-logging</artifactId>
					<groupId>commons-logging</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>xalan</groupId>
			<artifactId>xalan</artifactId>
			<version>2.6.0</version>
		</dependency>
		<!-- SCXML end -->

		<!-- Hibernate start -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
			<version>3.6.10.Final</version>
			<type>jar</type>
			<scope>compile</scope>
			<exclusions>
				<exclusion>
					<groupId>commons-collections</groupId>
					<artifactId>commons-collections</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-commons-annotations</artifactId>
			<version>3.2.0.Final</version>
			<type>jar</type>
		</dependency>

		<dependency>
			<groupId>org.hibernate.javax.persistence</groupId>
			<artifactId>hibernate-jpa-2.0-api</artifactId>
			<version>1.0.1.Final</version>
			<type>jar</type>
		</dependency>

		<dependency>
			<groupId>org.javassist</groupId>
			<artifactId>javassist</artifactId>
			<version>3.17.1-GA</version>
			<scope>runtime</scope>
		</dependency>

		<!-- Hibernate end -->

		<dependency>
			<groupId>commons-math</groupId>
			<artifactId>commons-math</artifactId>
			<version>1.2</version>
		</dependency>

		<dependency>
			<groupId>commons-collections</groupId>
			<artifactId>commons-collections</artifactId>
			<version>3.2</version>
		</dependency>

		<!-- Database Drivers start -->
		<dependency>
			<!-- For licensing reasons Mysql driver has to be installed manually and 
				is therefore referenced in the install guide. Be sure to update the guide 
				accordingly if you change the driver version here http://confluence.mango.local/display/MIF/MIF+Installation+Manual# -->
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>5.1.14</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.oracle</groupId>
			<artifactId>ojdbc6</artifactId>
			<version>11.2.0.3.0</version>
			<scope>runtime</scope>
		</dependency>

		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<version>1.2.128</version>
		</dependency>

		<dependency>
			<groupId>org.hsqldb</groupId>
			<artifactId>hsqldb</artifactId>
			<version>1.8.0.10</version>
			<scope>test</scope>
		</dependency>
		<!-- Database Drivers end -->

		<dependency>
			<groupId>c3p0</groupId>
			<artifactId>c3p0</artifactId>
			<version>0.9.1</version>
		</dependency>

		<!-- Hibernate END -->

       <dependency>
            <groupId>com.lowagie</groupId>
            <artifactId>itext</artifactId>
            <version>2.1.7</version>
            <exclusions>
                <exclusion>
                    <groupId>org.bouncycastle</groupId>
                    <artifactId>bcprov-jdk14</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.bouncycastle</groupId>
                    <artifactId>bcmail-jdk14</artifactId>
                </exclusion>                
            </exclusions>
		</dependency>
	</dependencies>

	<profiles>

        <profile>
            <activation>
                <os>
                    <family>Windows</family>
                </os>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <excludes>
                                <exclude>**/ShellBasedRetrieveHandlerTemplateTest.java</exclude>
                                <exclude>**/JobServiceTest.java</exclude>
                                <exclude>**/Jsch*.java</exclude>
                                <exclude>**/InvokerHelper*.java</exclude>
                                <exclude>**/ResourceCopierImplTest.java</exclude>
                            </excludes>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        
		<profile>
			<id>navws</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
		</profile>

		<profile>
			<id>jenkins</id>
			<properties>
				<mif.build.properties.file.location>${basedir}/../config/cis/build-env.properties</mif.build.properties.file.location>
			</properties>
            <build>
               <plugins>
                   <plugin>
                       <groupId>org.apache.maven.plugins</groupId>
                       <artifactId>maven-surefire-plugin</artifactId>
                       <configuration>
                           <additionalClasspathElements>
                               <additionalClasspathElement>${web-inf.path}</additionalClasspathElement>
                           </additionalClasspathElements>
                           <systemPropertyVariables>
                               <mif.build.properties.file.location>${mif.build.properties.file.location}</mif.build.properties.file.location>
                               <mif.runtime.dir>${project.build.runtime}</mif.runtime.dir>
                           </systemPropertyVariables>
                       </configuration>
                   </plugin>
               </plugins>
           </build>
		</profile>

		<profile>
			<id>obfuscate</id>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-war-plugin</artifactId>
						<configuration>
							<warName>${project.build.finalName}</warName>
						</configuration>
					</plugin>
					<plugin>
						<groupId>com.github.wvengen</groupId>
						<artifactId>proguard-maven-plugin</artifactId>
						<configuration>
							<options>
								<option>-dontshrink</option>
								<option>-dontoptimize</option>
								<option>-keep public class * {public protected *;}</option>
								<option>-keepattributes **</option>
								<option>-keepclassmembers class * {*;}</option>
								<option>-keepclassmembers enum * {*;}</option>
								<option>-keepparameternames</option>
								<option>-renamesourcefileattribute SourceFile</option>
								<option>-keepclassmembernames class * {*;}</option>
								<option>-keepclasseswithmembernames class * {*;}</option>
							</options>
						</configuration>
					</plugin>
					<plugin>
						<artifactId>maven-antrun-plugin</artifactId>
						<executions>
							<execution>
								<id>chmod-bash-obfuscator</id>
								<phase>initialize</phase>
								<configuration>
									<tasks>
										<echo message="Chmod obfuscation scripts..." />
										<chmod file="${bash.obfuscator.exec}" perm="755" />
										<chmod dir="${python.obfuscator.path}" perm="755"
											includes="**/*" />
										<chmod file="${scripts.obfuscation.report.generator}"
											perm="755" />
									</tasks>
								</configuration>
								<goals>
									<goal>run</goal>
								</goals>
							</execution>

							<execution>
								<id>generate-obfuscation-report</id>
								<phase>package</phase>
								<configuration>
									<tasks>
										<echo message="Producing obfuscation report." />
										<exec executable="${scripts.obfuscation.report.generator}"
											output="${project.build.directory}/scripts-obfuscation-report.html">
											<arg value="../runtime" />
											<arg value="${project.build.directory}/MIFServer/WEB-INF/runtime" />
										</exec>
									</tasks>
								</configuration>
								<goals>
									<goal>run</goal>
								</goals>
							</execution>

							<execution>
								<id>obfuscate scripts</id>
								<!-- obfuscate before the tests are run -->
								<phase>process-test-classes</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<tasks>
										<echo>obfuscate bash scripts</echo>
										<apply executable="${bash.obfuscator.exec}">
											<arg value="-i" />
											<arg value="-c" />
											<arg value="4" />
											<arg value="-d" />
											<arg value="3" />
											<arg value="-e" />
											<arg value="1-9" />
											<arg value="-f" />
											<srcfile />
											<fileset dir="${project.build.runtime}/scripts">
												<patternset>
													<include name="**/*.sh" />
												</patternset>
											</fileset>
											<redirector>
												<outputmapper id="out" type="glob" from="*.sh"
													to="${project.build.runtime}/scripts/*.sh" />
											</redirector>
										</apply>
										<echo>obfuscate python scripts</echo>
										<apply executable="${python.obfuscator.exec}" dest="${project.build.runtime}/scripts">
											<srcfile />
											<targetfile />
											<fileset dir="${project.build.runtime}/scripts">
												<patternset>
													<include name="**/*.py" />
													<exclude name="**/*Test*" />
												</patternset>
											</fileset>
											<!-- doesn't support obfuscating in place so create obfuscated 
												versions next to originals -->
											<mapper type="glob" from="*.py" to="*.py_obf" />
										</apply>
										<!-- replace the original files with the obfuscated ones -->
										<move todir="${project.build.runtime}/scripts"
											includeemptydirs="false" overwrite="true">
											<fileset dir="${project.build.runtime}/scripts" />
											<mapper type="glob" from="*.py_obf" to="*.py" />
										</move>
									</tasks>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

	<build>
		<finalName>MIFServer</finalName>
		<plugins>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>properties-maven-plugin</artifactId>
				<version>1.0-alpha-2</version>
				<executions>
					<execution>
						<phase>validate</phase>
						<goals>
							<goal>read-project-properties</goal>
						</goals>
						<configuration>
							<files>
								<file>${mif.build.properties.file.location}</file>
							</files>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>com.google.code.maven-replacer-plugin</groupId>
				<artifactId>maven-replacer-plugin</artifactId>
				<version>1.3.2</version>
				<executions>
					<execution>
						<phase>prepare-package</phase>
						<goals>
							<goal>replace</goal>
						</goals>
					</execution>
				</executions>

				<configuration>
					<includes>
						<include>src/main/webapp/index.jsp</include>
						<include>${project.build.directory}/${project.build.finalName}/WEB-INF/classes/mif-default.properties</include>
					</includes>
					<regex>false</regex>

					<token>PROJECT_VERSION</token>
					<value>${project.version}</value>

					<!-- both provided by Jenkins, will not show up in development -->
					<token>BUILD_NUMBER</token>
					<value>${BUILD_NUMBER}</value>

					<token>SVN_REVISION</token>
					<value>${SVN_REVISION}</value>

				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.4</version>

				<executions>
					<execution>
						<id>copy-default-config</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${basedir}/target/config/default</outputDirectory>
							<includeEmptyDirs>true</includeEmptyDirs>
							<resources>
								<resource>
									<directory>${web-inf.path}/classes</directory>
									<filtering>true</filtering>
									<includes>
										<include>**/*.properties</include>
									</includes>
								</resource>
							</resources>
							<encoding>UTF-8</encoding>
						</configuration>
					</execution>

					<execution>
						<id>copy-environment-specific-config</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${basedir}/target/config/</outputDirectory>
							<includeEmptyDirs>true</includeEmptyDirs>
							<resources>
								<resource>
									<directory>${basedir}/../config</directory>
									<filtering>true</filtering>
									<includes>
										<include>**/*</include>
									</includes>
								</resource>
							</resources>
							<encoding>UTF-8</encoding>
						</configuration>
					</execution>

					<execution>
						<id>copy-runtime</id>
						<phase>process-resources</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.runtime}</outputDirectory>
							<includeEmptyDirs>true</includeEmptyDirs>
							<resources>
								<resource>
									<directory>${web-inf.path}/runtime</directory>
								</resource>
							</resources>
							<encoding>UTF-8</encoding>
						</configuration>
					</execution>
                    <execution>
                        <id>copy-runtime-connectors</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.outputDirectory}/connectors</outputDirectory>
                            <includeEmptyDirs>true</includeEmptyDirs>
                            <resources>
                                <resource>
                                    <directory>${web-inf.path}/connectors</directory>
                                </resource>
                            </resources>
                            <encoding>UTF-8</encoding>
                        </configuration>
                    </execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.0.2</version>
				<goals>
					<goal>war</goal>
					<goal>exploaded</goal>
				</goals>
				<configuration>
					<webResources>
						<resource>
							<directory>${basedir}/src/main/webapp</directory>
							<exclude>WEB-INF/runtime/**/*</exclude>

							<!-- Keep the below line commented if you want to have the filtering 
								applied to the whole WAR -->
							<!-- <includes> <include>**/*.properties</include> </includes> -->
						</resource>
                        <resource>
                            <directory>${project.basedir}/src/main/resources</directory>
                        </resource>
						<resource>
							<directory>${project.build.runtime}</directory>
							<targetPath>WEB-INF/runtime</targetPath>
						</resource>
					</webResources>
					<archive>
						<manifest>
							<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
							<addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
						</manifest>
						<manifestEntries>
							<Application-Name>${project.build.finalName}</Application-Name>
							<Application-Version>${project.version}</Application-Version>
							<Build-Time>${buildNumber}</Build-Time>
							<HudsonBuildNumber>${BUILD_NUMBER}</HudsonBuildNumber>
							<HudsonBuildId>${BUILD_ID}</HudsonBuildId>
							<HudsonJobName>${JOB_NAME}</HudsonJobName>
							<HudsonBuildTag>${BUILD_TAG}</HudsonBuildTag>
							<HudsonJavaHome>${JAVA_HOME}</HudsonJavaHome>
							<HudsonWorkspace>${WORKSPACE}</HudsonWorkspace>
							<HudsonUrl>${HUDSON_URL}</HudsonUrl>
							<HudsonSvnRevision>${SVN_REVISION}</HudsonSvnRevision>
						</manifestEntries>
					</archive>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-antrun-plugin</artifactId>
				<executions>
					<execution>
						<phase>generate-resources</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<tasks>
								<echo>Build Templates directory location:
									${project.build.runtime}</echo>
								<echo>Using properties file:
									${mif.build.properties.file.location}</echo>
							</tasks>
						</configuration>
					</execution>
					<execution>
						<id>chmod-scripts</id>
						<phase>process-test-classes</phase>
						<configuration>
							<tasks>
								<echo message="Chmod runtime scripts..." />
								<chmod perm="755">
									<fileset dir="${project.build.runtime}">
										<include name="**/*.sh" />
										<include name="**/*.py" />
									</fileset>
								</chmod>
							</tasks>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-eclipse-plugin</artifactId>
				<version>2.7</version>
				<configuration>
					<additionalBuildcommands>
						<buildCommand>
							<name>org.eclipse.ui.externaltools.ExternalToolBuilder</name>
							<triggers>auto,full,incremental,</triggers>
							<arguments>
								<LaunchConfigHandle>&lt;project&gt;./MangoMavenWarBuilder.launch</LaunchConfigHandle>
							</arguments>
						</buildCommand>
					</additionalBuildcommands>
				</configuration>
			</plugin>

			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<additionalClasspathElements>
						<additionalClasspathElement>${web-inf.path}</additionalClasspathElement>
					</additionalClasspathElements>
					<systemPropertyVariables>
						<mif.build.properties.file.location>${mif.build.properties.file.location}</mif.build.properties.file.location>
						<mif.runtime.dir>${project.build.runtime}</mif.runtime.dir>
					</systemPropertyVariables>
				</configuration>
			</plugin>
            
            <plugin>
				<artifactId>maven-failsafe-plugin</artifactId>
				<configuration>
					<additionalClasspathElements>
						<additionalClasspathElement>${web-inf.path}</additionalClasspathElement>
					</additionalClasspathElements>
					<systemPropertyVariables>
						<mif.build.properties.file.location>${mif.build.properties.file.location}</mif.build.properties.file.location>
						<mif.runtime.dir>${project.build.runtime}</mif.runtime.dir>
					</systemPropertyVariables>
				</configuration>
			</plugin>
			
            
            <plugin>
                <groupId>org.apache.tomcat.maven</groupId>
                <artifactId>tomcat7-maven-plugin</artifactId>
                <version>2.1</version>
                <!-- Executable JAR -->
                <executions>
                    <execution>
                        <id>tomcat-run</id>
                        <goals>
                            <goal>exec-war-only</goal>
                        </goals>
                        <phase>package</phase>
                        <configuration>
                            <path>/MIFServer</path>
                            <enableNaming>false</enableNaming>
                            <finalName>MIFServer-executable.jar</finalName>
                            <attachArtifactClassifier>executable</attachArtifactClassifier>
                            <attachArtifactClassifierType>jar</attachArtifactClassifierType>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            
			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<executions>
					<execution>
						<configuration>
							<finalName>dbtool</finalName>
							<descriptors>
								<descriptor>${basedir}/src/main/assembly/dbtool.xml</descriptor>
							</descriptors>
						</configuration>
						<id>make-dbtool</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

        <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-jar-plugin</artifactId>
            <executions>
                <execution>
                    <id>create-jar</id>
                    <phase>package</phase>
                    <goals>
                        <goal>jar</goal>
                    </goals>
                    <configuration>
                        <classifier>exe</classifier>
                        <includes>
                            <include>**</include>
                            <include>./../runtime/**</include>
                        </includes>
                    </configuration>
                </execution>
                <execution>
                    <id>attach-tests</id>
                    <goals>
                        <goal>test-jar</goal>
                    </goals>
                    <configuration>
                        <excludes>
                            <exclude>log4j.properties</exclude>
                            <exclude>tests.properties</exclude>
                        </excludes>
                    </configuration>
                </execution>
            </executions>
        </plugin>
        
<!--  TODO is this needed -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>sysdeo-tomcat-maven-plugin</artifactId>
				<version>1.1</version>
			</plugin>

		</plugins>

		<!-- FP: add this to reconcile with m2e -->
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-antrun-plugin</artifactId>
										<versionRange>[1.3,)</versionRange>
										<goals>
											<goal>run</goal>
											<goal>chmod-scripts</goal>
											<goal>create-resource-component-dir</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<execute />
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.codehaus.mojo
										</groupId>
										<artifactId>
											properties-maven-plugin
										</artifactId>
										<versionRange>
											[1.0-alpha-2,)
										</versionRange>
										<goals>
											<goal>
												read-project-properties
											</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<execute>
											<runOnIncremental>false</runOnIncremental>
										</execute>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

</project>
